// Code generated by Kitex v0.5.2. DO NOT EDIT.

package analyzeservice

import (
	"context"
	client "github.com/cloudwego/kitex/client"
	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
	analyze "summer/server/shared/kitex_gen/analyze"
)

func serviceInfo() *kitex.ServiceInfo {
	return analyzeServiceServiceInfo
}

var analyzeServiceServiceInfo = NewServiceInfo()

func NewServiceInfo() *kitex.ServiceInfo {
	serviceName := "AnalyzeService"
	handlerType := (*analyze.AnalyzeService)(nil)
	methods := map[string]kitex.MethodInfo{
		"Analyze": kitex.NewMethodInfo(analyzeHandler, newAnalyzeServiceAnalyzeArgs, newAnalyzeServiceAnalyzeResult, false),
	}
	extra := map[string]interface{}{
		"PackageName": "analyze",
	}
	svcInfo := &kitex.ServiceInfo{
		ServiceName:     serviceName,
		HandlerType:     handlerType,
		Methods:         methods,
		PayloadCodec:    kitex.Thrift,
		KiteXGenVersion: "v0.5.2",
		Extra:           extra,
	}
	return svcInfo
}

func analyzeHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*analyze.AnalyzeServiceAnalyzeArgs)
	realResult := result.(*analyze.AnalyzeServiceAnalyzeResult)
	success, err := handler.(analyze.AnalyzeService).Analyze(ctx, realArg.Req)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newAnalyzeServiceAnalyzeArgs() interface{} {
	return analyze.NewAnalyzeServiceAnalyzeArgs()
}

func newAnalyzeServiceAnalyzeResult() interface{} {
	return analyze.NewAnalyzeServiceAnalyzeResult()
}

type kClient struct {
	c client.Client
}

func newServiceClient(c client.Client) *kClient {
	return &kClient{
		c: c,
	}
}

func (p *kClient) Analyze(ctx context.Context, req *analyze.AnalyzeRequest) (r *analyze.AnalyzeResponse, err error) {
	var _args analyze.AnalyzeServiceAnalyzeArgs
	_args.Req = req
	var _result analyze.AnalyzeServiceAnalyzeResult
	if err = p.c.Call(ctx, "Analyze", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
